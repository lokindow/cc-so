user  nginx;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes  auto;

# Configures default error logger.
error_log  /var/log/nginx/error.log warn;

pid        /var/run/nginx.pid;

events {
    # The maximum number of simultaneous connections that can be opened by
    # a worker process.
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Don't tell nginx version to clients.
    server_tokens off;

    # Specifies the main log format.
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # Sets the path, format, and configuration for a buffered log write.
    access_log  /var/log/nginx/access.log  main;

    # Sendfile copies data between one FD and other from within the kernel,
    # which is more efficient than read() + write().
    sendfile        on;

    # Causes nginx to attempt to send its HTTP response head in one packet,
    # instead of using partial frames.
    #tcp_nopush     on;

    # Timeout for keep-alive connections. Server will close connections after
    # this time.
    keepalive_timeout  65;

    # Enable gzipping of responses.
    gzip  on;

    # Set the Vary HTTP header as defined in the RFC 2616.
    gzip_vary on;

    # Get user real ip on access log
    real_ip_header X-Forwarded-For;
    set_real_ip_from 172.0.0.0/8; # subnet IPs from ELB

    # Controlling Buffer Overflow Attacks
    # (from https://www.cyberciti.biz/tips/linux-unix-bsd-nginx-webserver-security.html)
    client_body_buffer_size  2K;
    client_header_buffer_size 2k;
    client_max_body_size 100k;
    #large_client_header_buffers 2 1k; # desativado, dando erro "Request Header Or Cookie Too Large"

    # Includes virtual hosts configs.
    include /etc/nginx/conf.d/*.conf;
}
